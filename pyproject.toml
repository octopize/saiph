[project]
name = "saiph"
# Also modify in saiph/__init__.py
version = "2.0.3"
description = "A projection package"
authors = [
    {name = "Octopize", email = "help@octopize.io"}
]
license = {text = "Apache-2.0"}
requires-python = ">=3.10,<4.0"
dependencies = [
    "pandas>=2.2.2",
    "numpy>=1,<2",
    "scipy>=1.14,<2",
    "scikit-learn>=1.0,<2",
    "toolz>=1,<2",
    "pydantic>=2,<3",
    "msgspec>=0.18.5,<0.19",
]

[project.optional-dependencies]
matplotlib = ["matplotlib>=3.5.2,<4"]

[dependency-groups]
dev = [
    "ipykernel>=6.4,<7",
    "jupyter>=1.0,<2",
    "pytest>=8.2.2,<9",
    "mypy>=1.10.1,<2",
    "ruff>=0.8.0,<0.9",
    "flit>=3.4.0,<4",
    "py-spy>=0.3.11,<0.4",
    "typer>=0.4.1,<0.5",
    "Faker>=13.6.0,<14",
    "tqdm>=4.64.0,<5",
    "pytest-benchmark>=4.0.0,<5",
    "doubles>=1.5.3,<2",
    "ipdb>=0.13.9,<0.14",
]
doc = [
    "Sphinx<6",
    "sphinx-rtd-theme>=1.1.1,<2",
    "sphinx-gallery>=0.11.1,<0.12",
    "matplotlib>=3.5.2,<4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
filterwarnings = [
    "error"
]
markers = [
    "slow_benchmark: marks benchmarks as slow (deselect with '-m \"not slow_benchmark\"')",
]

python_files = "*_test.py"
addopts = "--tb=short"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "nocov",
    "if TYPE_CHECKING:",
]

[tool.coverage.run]
branch = true

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG",    # flake8-unused-arguments
    "SIM",    # flake8-simplify
    "S",      # bandit
    "T20",    # flake8-print
    "DTZ",    # flake8-datetimez
    "RUF",    # ruff-specific rules
    "D",      # pydocstyle
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D203",   # 1 blank line required before class docstring (incompatible with D211)
    "D213",   # Multi-line docstring summary should start at the second line (incompatible with D212)
]

[tool.ruff.lint.per-file-ignores]
"*_test.py" = ["S101", "D"]  # Allow assert statements and no docstrings in tests
"tests/*" = ["S101", "D"]
"bin/*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = "pandas.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "scipy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sklearn.utils.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "toolz.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "doubles.*"
ignore_missing_imports = true

